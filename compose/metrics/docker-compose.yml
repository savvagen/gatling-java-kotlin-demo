version: '3.8'
services:

  grafana:
    image: grafana/grafana:7.2.1
    container_name: grafana
    hostname: grafana
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_INSTALL_PLUGINS=michaeldmoore-multistat-panel,grafana-piechart-panel,yesoreyeram-boomtable-panel
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    restart: always

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: unless-stopped
    environment:
      - INFLUXDB_CONFIG_PATH=/tmp/influxdb/influxdb.conf
      - INFLUXDB_DB=testdb
    volumes:
      - ./influxdb:/tmp/influxdb
      - influx:/var/lib/influxdb
    ports:
      - 8086:8086
      - 2004:2003

  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.34.0
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8081:8080

  prometheus:
    image: prom/prometheus:v2.22.0
    container_name: prometheus
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=90d'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      # - ./prometheus/rules/hosts_rules.yml:/etc/prometheus/hosts_rules.yml
    ports:
      - 9090:9090
    depends_on:
      - cadvisor

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - 9100:9100

  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    ports:
      - "9091:9091"

  portainer:
    image: portainer/portainer:1.24.1
    container_name: portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    ports:
      - 9000:9000
      - 8000:8000

networks:
  default:
    name: gatling-sandbox

volumes:
  influx:
  portainer:
  grafana:

